//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SisWebViaje.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistViajeEntities : DbContext
    {
        public SistViajeEntities()
            : base("name=SistViajeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bus> Bus { get; set; }
        public virtual DbSet<Chofer> Chofer { get; set; }
        public virtual DbSet<Pasajeros> Pasajeros { get; set; }
        public virtual DbSet<Ruta> Ruta { get; set; }
        public virtual DbSet<Viaje> Viaje { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int sp_adicionar_chofer(string nomChofer, Nullable<System.DateTime> fechaIng, string categoria, Nullable<decimal> costo, string foto)
        {
            var nomChoferParameter = nomChofer != null ?
                new ObjectParameter("nomChofer", nomChofer) :
                new ObjectParameter("nomChofer", typeof(string));
    
            var fechaIngParameter = fechaIng.HasValue ?
                new ObjectParameter("fechaIng", fechaIng) :
                new ObjectParameter("fechaIng", typeof(System.DateTime));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("foto", foto) :
                new ObjectParameter("foto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adicionar_chofer", nomChoferParameter, fechaIngParameter, categoriaParameter, costoParameter, fotoParameter);
        }
    
    
        public virtual ObjectResult<sp_adicionar_pasajero_Result> sp_adicionar_pasajero(string vIA, string nOM, Nullable<int> aSI, string tP, Nullable<decimal> pG)
        {
            var vIAParameter = vIA != null ?
                new ObjectParameter("VIA", vIA) :
                new ObjectParameter("VIA", typeof(string));
    
            var nOMParameter = nOM != null ?
                new ObjectParameter("NOM", nOM) :
                new ObjectParameter("NOM", typeof(string));
    
            var aSIParameter = aSI.HasValue ?
                new ObjectParameter("ASI", aSI) :
                new ObjectParameter("ASI", typeof(int));
    
            var tPParameter = tP != null ?
                new ObjectParameter("TP", tP) :
                new ObjectParameter("TP", typeof(string));
    
            var pGParameter = pG.HasValue ?
                new ObjectParameter("PG", pG) :
                new ObjectParameter("PG", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_adicionar_pasajero_Result>("sp_adicionar_pasajero", vIAParameter, nOMParameter, aSIParameter, tPParameter, pGParameter);
        }
    
        public virtual int sp_adicionar_pasajeros(string vIA, string nOM, Nullable<int> aSI, string tP, Nullable<decimal> pG)
        {
            var vIAParameter = vIA != null ?
                new ObjectParameter("VIA", vIA) :
                new ObjectParameter("VIA", typeof(string));
    
            var nOMParameter = nOM != null ?
                new ObjectParameter("NOM", nOM) :
                new ObjectParameter("NOM", typeof(string));
    
            var aSIParameter = aSI.HasValue ?
                new ObjectParameter("ASI", aSI) :
                new ObjectParameter("ASI", typeof(int));
    
            var tPParameter = tP != null ?
                new ObjectParameter("TP", tP) :
                new ObjectParameter("TP", typeof(string));
    
            var pGParameter = pG.HasValue ?
                new ObjectParameter("PG", pG) :
                new ObjectParameter("PG", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adicionar_pasajeros", vIAParameter, nOMParameter, aSIParameter, tPParameter, pGParameter);
        }
    
        public virtual ObjectResult<sp_iniciar_sesion_Result> sp_iniciar_sesion(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_iniciar_sesion_Result>("sp_iniciar_sesion", userParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_logear_Result> sp_logear(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_logear_Result>("sp_logear", userParameter, passParameter);
        }
    
        public virtual ObjectResult<sp_reporte_total_ruta_Result> sp_reporte_total_ruta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporte_total_ruta_Result>("sp_reporte_total_ruta");
        }
    
        public virtual ObjectResult<sp_reporte_cant_chofer_Result> sp_reporte_cant_chofer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporte_cant_chofer_Result>("sp_reporte_cant_chofer");
        }
    
        public virtual ObjectResult<sp_reporte_total_mes_Result> sp_reporte_total_mes(Nullable<int> anio)
        {
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_reporte_total_mes_Result>("sp_reporte_total_mes", anioParameter);
        }
    
        public virtual int sp_adicionar_viaje(Nullable<int> bus, string ruta, string chofer, string hora, Nullable<System.DateTime> fecha, Nullable<decimal> costo)
        {
            var busParameter = bus.HasValue ?
                new ObjectParameter("bus", bus) :
                new ObjectParameter("bus", typeof(int));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("ruta", ruta) :
                new ObjectParameter("ruta", typeof(string));
    
            var choferParameter = chofer != null ?
                new ObjectParameter("chofer", chofer) :
                new ObjectParameter("chofer", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adicionar_viaje1", busParameter, rutaParameter, choferParameter, horaParameter, fechaParameter, costoParameter);
        }
    }
}
